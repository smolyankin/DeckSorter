@model DeckSorter.Response.DeckDetailResponse

@{
    ViewBag.Title = "Подробно";
    Layout = "~/Views/Shared/_Layout.cshtml";
    @Styles.Render("~/Content/css")
}

<h2>@Html.DisplayFor(model => model.Title)</h2>

<div>
    <h3>@Html.DisplayNameFor(model => model.Count) @Html.DisplayFor(model => model.Count)</h3>
    <h4>@Html.DisplayNameFor(model => model.DateModify) @Html.DisplayFor(model => model.DateModify)</h4>
    <hr />
    <p>
        @Html.ActionLink("Удалить", "Delete", new { id = Model.Id }) |
        @Html.ActionLink("Вернуться к списку колод", "Index")
    </p>
    <hr />
</div>
@using (Html.BeginForm("Details", "Decks", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.CheckBoxFor(model => Model.Manual, new { manual = Model.Manual });
    @Html.DisplayNameFor(model => model.Manual);
    <div id="man" class="form-group">
        @Html.LabelFor(model => Model.ManualCount, new { htmlAttributes = new { @class = "control-label" } })
        <div>
            @Html.EditorFor(model => Model.ManualCount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => Model.ManualCount, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div style="margin: 10px;">
            <input type="submit" value="Перемешать" class="btn btn-default" />
        </div>
        <hr />
    </div>
}
@using (Html.BeginForm("Sort", "Decks", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        <div style="margin: 10px;">
            <input type="hidden" name="Id" value=@Model.Id />
            <input type="submit"
                   value="По умолчанию и выйти"
                   class="btn btn-default"
                   style="width: auto; max-width: 800px !important;" />
        </div>
        <hr />
    </div>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Cards.FirstOrDefault().ValueTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Cards.FirstOrDefault().SuitTitle)
        </th>
    </tr>

    @foreach (var card in Model.Cards)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => card.ValueTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => card.SuitTitle)
            </td>
        </tr>
    }

</table>


